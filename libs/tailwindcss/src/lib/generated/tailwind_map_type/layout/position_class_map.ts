import type { ResponsiveBreakpoint } from "../../../types/responsive_breakpoint.types";

export type PositionType = 
  | PositionValue
  | Partial<Record<ResponsiveBreakpoint, PositionValue>>;

export type PositionValue = keyof typeof POSITION_CLASS_MAP;

export const POSITION_CLASS_MAP = {
  "static": "static",
  "xs:static": "xs:static",
  "sm:static": "sm:static",
  "md:static": "md:static",
  "lg:static": "lg:static",
  "xl:static": "xl:static",
  "2xl:static": "2xl:static",
  "hover:static": "hover:static",
  "focus:static": "focus:static",
  "active:static": "active:static",
  "disabled:static": "disabled:static",
  "group-hover:static": "group-hover:static",
  "group:static": "group:static",
  "first:static": "first:static",
  "last:static": "last:static",
  "odd:static": "odd:static",
  "even:static": "even:static",
  "dark:static": "dark:static",
  "fixed": "fixed",
  "xs:fixed": "xs:fixed",
  "sm:fixed": "sm:fixed",
  "md:fixed": "md:fixed",
  "lg:fixed": "lg:fixed",
  "xl:fixed": "xl:fixed",
  "2xl:fixed": "2xl:fixed",
  "hover:fixed": "hover:fixed",
  "focus:fixed": "focus:fixed",
  "active:fixed": "active:fixed",
  "disabled:fixed": "disabled:fixed",
  "group-hover:fixed": "group-hover:fixed",
  "group:fixed": "group:fixed",
  "first:fixed": "first:fixed",
  "last:fixed": "last:fixed",
  "odd:fixed": "odd:fixed",
  "even:fixed": "even:fixed",
  "dark:fixed": "dark:fixed",
  "absolute": "absolute",
  "xs:absolute": "xs:absolute",
  "sm:absolute": "sm:absolute",
  "md:absolute": "md:absolute",
  "lg:absolute": "lg:absolute",
  "xl:absolute": "xl:absolute",
  "2xl:absolute": "2xl:absolute",
  "hover:absolute": "hover:absolute",
  "focus:absolute": "focus:absolute",
  "active:absolute": "active:absolute",
  "disabled:absolute": "disabled:absolute",
  "group-hover:absolute": "group-hover:absolute",
  "group:absolute": "group:absolute",
  "first:absolute": "first:absolute",
  "last:absolute": "last:absolute",
  "odd:absolute": "odd:absolute",
  "even:absolute": "even:absolute",
  "dark:absolute": "dark:absolute",
  "relative": "relative",
  "xs:relative": "xs:relative",
  "sm:relative": "sm:relative",
  "md:relative": "md:relative",
  "lg:relative": "lg:relative",
  "xl:relative": "xl:relative",
  "2xl:relative": "2xl:relative",
  "hover:relative": "hover:relative",
  "focus:relative": "focus:relative",
  "active:relative": "active:relative",
  "disabled:relative": "disabled:relative",
  "group-hover:relative": "group-hover:relative",
  "group:relative": "group:relative",
  "first:relative": "first:relative",
  "last:relative": "last:relative",
  "odd:relative": "odd:relative",
  "even:relative": "even:relative",
  "dark:relative": "dark:relative",
  "sticky": "sticky",
  "xs:sticky": "xs:sticky",
  "sm:sticky": "sm:sticky",
  "md:sticky": "md:sticky",
  "lg:sticky": "lg:sticky",
  "xl:sticky": "xl:sticky",
  "2xl:sticky": "2xl:sticky",
  "hover:sticky": "hover:sticky",
  "focus:sticky": "focus:sticky",
  "active:sticky": "active:sticky",
  "disabled:sticky": "disabled:sticky",
  "group-hover:sticky": "group-hover:sticky",
  "group:sticky": "group:sticky",
  "first:sticky": "first:sticky",
  "last:sticky": "last:sticky",
  "odd:sticky": "odd:sticky",
  "even:sticky": "even:sticky",
  "dark:sticky": "dark:sticky",
} as const;