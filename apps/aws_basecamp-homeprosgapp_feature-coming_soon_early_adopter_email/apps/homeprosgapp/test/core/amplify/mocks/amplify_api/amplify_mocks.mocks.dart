// Mocks generated by Mockito 5.4.4 from annotations
// in homeprosgapp/test/core/amplify/mocks/amplify_api/amplify_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:amplify_api/src/api_plugin_impl.dart' as _i5;
import 'package:amplify_api_dart/amplify_api_dart.dart' as _i4;
import 'package:amplify_api_dart/src/graphql/web_socket/blocs/web_socket_bloc.dart'
    as _i3;
import 'package:amplify_api_dart/src/util/amplify_api_config.dart' as _i9;
import 'package:amplify_core/amplify_core.dart' as _i2;
import 'package:amplify_core/src/config/amplify_outputs/api_outputs.dart'
    as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDependencyManager_0 extends _i1.SmartFake
    implements _i2.DependencyManager {
  _FakeDependencyManager_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAWSHttpClient_1 extends _i1.SmartFake implements _i2.AWSHttpClient {
  _FakeAWSHttpClient_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketBloc_2 extends _i1.SmartFake implements _i3.WebSocketBloc {
  _FakeWebSocketBloc_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraphQLOperation_3<T1> extends _i1.SmartFake
    implements _i4.GraphQLOperation<T1> {
  _FakeGraphQLOperation_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRestOperation_4 extends _i1.SmartFake implements _i4.RestOperation {
  _FakeRestOperation_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AmplifyAPI].
///
/// See the documentation for Mockito's code generation for more information.
class MockAmplifyAPI extends _i1.Mock implements _i5.AmplifyAPI {
  MockAmplifyAPI() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get runtimeTypeName => (super.noSuchMethod(
        Invocation.getter(#runtimeTypeName),
        returnValue: _i6.dummyValue<String>(
          this,
          Invocation.getter(#runtimeTypeName),
        ),
      ) as String);

  @override
  Map<_i4.APIAuthorizationType<_i2.AmplifyAuthProvider>, _i4.APIAuthProvider>
      get authProviders => (super.noSuchMethod(
            Invocation.getter(#authProviders),
            returnValue: <_i4.APIAuthorizationType<_i2.AmplifyAuthProvider>,
                _i4.APIAuthProvider>{},
          ) as Map<_i4.APIAuthorizationType<_i2.AmplifyAuthProvider>,
              _i4.APIAuthProvider>);

  @override
  _i2.Category get category => (super.noSuchMethod(
        Invocation.getter(#category),
        returnValue: _i2.Category.analytics,
      ) as _i2.Category);

  @override
  _i2.DependencyManager get dependencies => (super.noSuchMethod(
        Invocation.getter(#dependencies),
        returnValue: _FakeDependencyManager_0(
          this,
          Invocation.getter(#dependencies),
        ),
      ) as _i2.DependencyManager);

  @override
  _i7.Future<void> addPlugin(
          {required _i2.AmplifyAuthProviderRepository? authProviderRepo}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPlugin,
          [],
          {#authProviderRepo: authProviderRepo},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> reset() => (super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> configure({
    _i2.AmplifyOutputs? config,
    required _i2.AmplifyAuthProviderRepository? authProviderRepo,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #configure,
          [],
          {
            #config: config,
            #authProviderRepo: authProviderRepo,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i2.AWSHttpClient getHttpClient(
    _i8.ApiType? type, {
    String? apiName,
    _i4.APIAuthorizationType<_i2.AmplifyAuthProvider>? authorizationMode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHttpClient,
          [type],
          {
            #apiName: apiName,
            #authorizationMode: authorizationMode,
          },
        ),
        returnValue: _FakeAWSHttpClient_1(
          this,
          Invocation.method(
            #getHttpClient,
            [type],
            {
              #apiName: apiName,
              #authorizationMode: authorizationMode,
            },
          ),
        ),
      ) as _i2.AWSHttpClient);

  @override
  _i3.WebSocketBloc createWebSocketBloc(_i9.EndpointConfig? endpoint) =>
      (super.noSuchMethod(
        Invocation.method(
          #createWebSocketBloc,
          [endpoint],
        ),
        returnValue: _FakeWebSocketBloc_2(
          this,
          Invocation.method(
            #createWebSocketBloc,
            [endpoint],
          ),
        ),
      ) as _i3.WebSocketBloc);

  @override
  _i4.GraphQLOperation<T> query<T>({required _i4.GraphQLRequest<T>? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [],
          {#request: request},
        ),
        returnValue: _FakeGraphQLOperation_3<T>(
          this,
          Invocation.method(
            #query,
            [],
            {#request: request},
          ),
        ),
      ) as _i4.GraphQLOperation<T>);

  @override
  _i4.GraphQLOperation<T> mutate<T>(
          {required _i4.GraphQLRequest<T>? request}) =>
      (super.noSuchMethod(
        Invocation.method(
          #mutate,
          [],
          {#request: request},
        ),
        returnValue: _FakeGraphQLOperation_3<T>(
          this,
          Invocation.method(
            #mutate,
            [],
            {#request: request},
          ),
        ),
      ) as _i4.GraphQLOperation<T>);

  @override
  _i7.Stream<_i4.GraphQLResponse<T>> subscribe<T>(
    _i4.GraphQLRequest<T>? request, {
    void Function()? onEstablished,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [request],
          {#onEstablished: onEstablished},
        ),
        returnValue: _i7.Stream<_i4.GraphQLResponse<T>>.empty(),
      ) as _i7.Stream<_i4.GraphQLResponse<T>>);

  @override
  _i4.RestOperation delete(
    String? path, {
    _i2.HttpPayload? body,
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_4(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #body: body,
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i4.RestOperation);

  @override
  _i4.RestOperation get(
    String? path, {
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_4(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i4.RestOperation);

  @override
  _i4.RestOperation head(
    String? path, {
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_4(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i4.RestOperation);

  @override
  _i4.RestOperation patch(
    String? path, {
    _i2.HttpPayload? body,
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_4(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #body: body,
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i4.RestOperation);

  @override
  _i4.RestOperation post(
    String? path, {
    _i2.HttpPayload? body,
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_4(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #body: body,
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i4.RestOperation);

  @override
  _i4.RestOperation put(
    String? path, {
    _i2.HttpPayload? body,
    Map<String, String>? headers,
    Map<String, String>? queryParameters,
    String? apiName,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParameters: queryParameters,
            #apiName: apiName,
          },
        ),
        returnValue: _FakeRestOperation_4(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #body: body,
              #headers: headers,
              #queryParameters: queryParameters,
              #apiName: apiName,
            },
          ),
        ),
      ) as _i4.RestOperation);

  @override
  void registerAuthProvider(_i4.APIAuthProvider? authProvider) =>
      super.noSuchMethod(
        Invocation.method(
          #registerAuthProvider,
          [authProvider],
        ),
        returnValueForMissingStub: null,
      );

  @override
  P cast<P extends _i2.AmplifyPluginInterface>() => (super.noSuchMethod(
        Invocation.method(
          #cast,
          [],
        ),
        returnValue: _i6.dummyValue<P>(
          this,
          Invocation.method(
            #cast,
            [],
          ),
        ),
      ) as P);

  @override
  T reifyPluginOptions<T extends _i2.AWSDebuggable>({
    required Object? pluginOptions,
    required T? defaultPluginOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #reifyPluginOptions,
          [],
          {
            #pluginOptions: pluginOptions,
            #defaultPluginOptions: defaultPluginOptions,
          },
        ),
        returnValue: _i6.dummyValue<T>(
          this,
          Invocation.method(
            #reifyPluginOptions,
            [],
            {
              #pluginOptions: pluginOptions,
              #defaultPluginOptions: defaultPluginOptions,
            },
          ),
        ),
      ) as T);
}
